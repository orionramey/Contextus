version: '3.8'

# The Sacred Stack - Your Private Engineering Laboratory
# "A paintbrush never made a painting" - The Way of Engineering

services:
  # PostgreSQL - The Foundation Stone
  # Where truth lives in tables
  postgres:
    image: postgres:15-alpine
    container_name: contextus-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: contextus
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - contextus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus - The All-Seeing Eye
  # Time-series metrics collection and storage
  prometheus:
    image: prom/prometheus:latest
    container_name: contextus-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerts:/etc/prometheus/alerts
      - prometheus_data:/prometheus
    networks:
      - contextus_network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Where Data Becomes Beauty
  # Visualization and dashboarding
  grafana:
    image: grafana/grafana:latest
    container_name: contextus-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - contextus_network
    depends_on:
      - prometheus
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - System Metrics Collector
  # Exposes host-level metrics to Prometheus
  node-exporter:
    image: prom/node-exporter:latest
    container_name: contextus-node-exporter
    restart: unless-stopped
    command:
      - '--path.rootfs=/host'
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - contextus_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9100/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Exporter - Database Metrics
  # Exposes PostgreSQL metrics to Prometheus
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: contextus-postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:mysecret@postgres:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - contextus_network
    depends_on:
      postgres:
        condition: service_healthy

  # Cadvisor - Container Metrics
  # Monitors resource usage of containers
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: contextus-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - contextus_network

# Networks - The Digital Highways
networks:
  contextus_network:
    driver: bridge
    name: contextus_monitoring

# Volumes - Persistent Wisdom
volumes:
  postgres_data:
    name: contextus_postgres_data
  prometheus_data:
    name: contextus_prometheus_data
  grafana_data:
    name: contextus_grafana_data